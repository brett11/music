<% provide(:title, 'All artists') %>

<div class="row">
  <div class="col-12 add_artist">
      <%= button_to "Add new artist", new_artist_path, method: 'get', id: "new_artist_link", remote: true %>
    </div>
</div>

<h1>All artists</h1>

<div class="row">
  <%= hidden_field_tag :direction, params[:direction]%>
  <%= hidden_field_tag :sort, params[:sort]%>

  <%= form_tag artists_path, :method => 'get', :id => "artists_search" do %>
      <div class="col-12">
      <div class="row">
      <div class="col-sm-5 col-sm-offset-2" style="display: flex; align-items: end;" >
          <%= text_field_tag :search, params[:search] %>
        </div>
        <div class="col-sm-3">
          <%= submit_tag "Search", name: nil, class: "btn btn-primary" %>
        </div>
      </div>
      </div>
  <% end %>
</div>

<div class="row">
  <div class="col-12" id="sort_alphabetically">
    <%= render 'sort_alphabetically' %>
  </div>
  <div class="col-12" id="sort_by_id">
    <%= render 'sort_by_id' %>
  </div>
</div>

<div class ="row artists_container pagination_list" id="all_artists">

  <!--Here Rails infers that @artists is a list of artist objects; moreover, when called with a collection of artists,
  Rails automatically iterates through them and renders each one with the _artist.html.erb partial (inferring
  the name of the partial from the name of the class). Bsically as if the code ahs a artist.each do loop -->
  <%= render @artists %>


  <%= will_paginate %>

  <% # http://railscasts.com/episodes/136-jquery-ajax-revised?autoplay=true %>

</div>
